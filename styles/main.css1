@charset "UTF-8";
body {
  font-size: 13px;
  font-family: "Roboto Slab", serif;
}

#timeline .axis path {
  fill: none;
  stroke: #000;
  stroke-width: 2px;
  opacity: 0.7;
}

#timeline .axis line {
  fill: none;
  stroke: #E2E9F5;
  shape-rendering: crispEdges;
}

#timeline .x.axis path {
  display: none;
}

#timeline .line {
  fill: none;
  stroke-width: 1.5px;
}

#timeline .right-block {
  float: right;
}

#timeline .wrapper {
  padding: 10px;
}

#timeline ul {
  display: inline-block;
  padding-left: 0px;
  margin: 0px 10px 0px 0px;
}

#timeline ul li.legend {
  display: inline-block;
  line-height: 20px;
  border-radius: 5px;
  padding: 0px 5px;
  margin-left: 5px;
  cursor: pointer;
}

#timeline ul li.legend:hover {
  background: #E2E9F5;
}

#timeline ul li.legend span {
  vertical-align: top;
  font-size: 20px;
}

#timeline ul li.legend span.close {
  line-height: 20px;
  font-size: 10px;
  opacity: 0;
  cursor: pointer;
}

#timeline ul li.legend:hover .close {
  opacity: 1;
}

#timeline .more-country-button {
  font-size: 20px;
  cursor: pointer;
  color: #113063;
}

#timeline .more-country-button.clicked i {
  transform: rotate(45deg);
}

#timeline .country-panel {
  display: none;
  position: absolute;
  border: 2px solid #113063;
  background: white;
  right: 0px;
  width: 200px;
  height: 200px;
  padding: 5px;
}

#timeline .country-panel .country-wrapper {
  background: white;
  overflow: scroll;
  border-bottom: 1px solid #113063;
}

#timeline .country-panel.showed {
  display: block;
}

#timeline .country-panel .country {
  padding: 3px;
  font-weight: bold;
  cursor: pointer;
}

#timeline .country-panel .country.hide {
  display: none;
}

#timeline .country-panel .country:nth-child(n+2) {
  border-top: 1px solid #E2E9F5;
}

#timeline .country-panel .country:hover {
  background: #E2E9F5;
}

#timeline .country-panel input {
  position: absolute;
  bottom: 5px;
  width: 190px;
  padding: 5px;
  margin: 0px;
  border: 0px;
}

#timeline #chart .tick {
  cursor: pointer;
}

#timeline #chart .x.axis line {
  display: none;
}

#timeline #chart .focus-line {
  stroke-dasharray: 2,2;
  stroke: black;
}

#timeline #chart .focus-line.current {
  stroke: red;
  opacity: 0.7;
}

#timeline #chart .year-selector {
  stroke: #113063;
  stroke-width: 5px;
}

#timeline #chart .year-bullet {
  cursor: pointer;
  stroke: #113063;
  fill: #113063;
  z-index: 1000;
}

#timeline #chart .year-bullet.selected {
  fill: white;
  stroke-width: 10px !important;
}

#timeline #chart .year-bullet:hover {
  stroke-width: 3px;
}

#timeline #chart #relative-chart {
  display: none;
}

.timeline-tip {
  line-height: 1;
  padding: 12px;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  border-radius: 2px;
}

.timeline-tip .first-row {
  margin-bottom: 5px;
}

.timeline-tip .first-row .country-name {
  font-size: 13px;
  font-weight: bold;
}

.timeline-tip .second-row {
  font-size: 10px;
}

.timeline-tip .second-row .sign::before {
  content: "â–²";
}

.timeline-tip .second-row .sign {
  font-size: 8px;
  display: inline-block;
  vertical-align: middle;
}

.timeline-tip .second-row .sign.positive {
  color: green;
}

.timeline-tip .second-row .sign.negative {
  color: red;
  transform: rotate(180deg);
}

.timeline-tip .second-row .percentage {
  font-weight: bold;
}

/* Style northward tooltips differently */
.timeline-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}

/*# sourceMappingURL=data:application/json;base64, */
