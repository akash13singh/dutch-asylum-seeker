body {
  font: 10px sans-serif;
}

#timeline .axis path {
  fill: none;
  stroke: #000;
  stroke-width: 2px;
  opacity: 0.7;
}

#timeline .axis line {
  fill: none;
  stroke: #E2E9F5;
  shape-rendering: crispEdges;
}

#timeline .x.axis path {
  display: none;
}

#timeline .line {
  fill: none;
  stroke-width: 1.5px;
}

#timeline .right-block {
  float: right;
}

#timeline .wrapper {
  padding: 10px;
}

#timeline ul {
  display: inline-block;
  padding-left: 0px;
  margin: 0px 10px 0px 0px;
}

#timeline ul li.legend {
  display: inline-block;
  line-height: 20px;
  border-radius: 5px;
  padding: 0px 5px;
  margin-left: 5px;
  cursor: pointer;
}

#timeline ul li.legend:hover {
  background: #E2E9F5;
}

#timeline ul li.legend span {
  vertical-align: top;
  font-size: 20px;
}

#timeline ul li.legend span.close {
  line-height: 20px;
  font-size: 10px;
  opacity: 0;
  cursor: pointer;
}

#timeline ul li.legend:hover .close {
  opacity: 1;
}

#timeline .more-country-button {
  font-size: 15px;
  cursor: pointer;
}

#timeline .more-country-button.clicked i {
  transform: rotate(45deg);
}

#timeline .country-panel {
  display: none;
  position: absolute;
  border: 2px solid #113063;
  background: white;
  right: 0px;
  width: 200px;
  height: 200px;
  padding: 5px;
}

#timeline .country-panel .country-wrapper {
  background: white;
  overflow: scroll;
  border-bottom: 1px solid #113063;
}

#timeline .country-panel.showed {
  display: block;
}

#timeline .country-panel .country {
  padding: 3px;
  font-weight: bold;
  cursor: pointer;
}

#timeline .country-panel .country.hide {
  display: none;
}

#timeline .country-panel .country:nth-child(n+2) {
  border-top: 1px solid #E2E9F5;
}

#timeline .country-panel .country:hover {
  background: #E2E9F5;
}

#timeline .country-panel input {
  position: absolute;
  bottom: 5px;
  width: 190px;
  padding: 5px;
  margin: 0px;
  border: 0px;
}

#timeline #chart .tick {
  cursor: pointer;
}

#timeline #chart .x.axis line {
  display: none;
}

#timeline #chart .focus-line {
  stroke-dasharray: 2,2;
  stroke: black;
}

#timeline #chart .focus-line.current {
  stroke: red;
  opacity: 0.7;
}

#timeline #chart .year-bullet {
  cursor: pointer;
  stroke: grey;
  stroke-width: 3px;
  fill: grey;
  z-index: 1000;
}

#timeline #chart .year-bullet.selected {
  fill: white;
}

#timeline #chart #relative-chart {
  display: none;
}

.timeline-tip {
  line-height: 1;
  font-weight: bold;
  padding: 12px;
  background: rgba(0, 0, 0, 0.8);
  color: #fff;
  border-radius: 2px;
}

/* Style northward tooltips differently */
.timeline-tip.n:after {
  margin: -1px 0 0 0;
  top: 100%;
  left: 0;
}

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpbmUtc2xpZGVyLnNjc3MiLCJjb25maWcuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLHNCQUFzQjtDQUN2Qjs7QUFHRDtFQUVNLFdBQVc7RUFDWCxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGFBQWE7Q0FDZDs7QUFOTDtFQVFNLFdBQVc7RUFDWCxnQkNmYztFRGdCZCw0QkFBNEI7Q0FDN0I7O0FBWEw7RUFjTSxjQUFjO0NBQ2Y7O0FBZkw7RUFrQk0sV0FBVztFQUNYLG9CQUFvQjtDQUNyQjs7QUFwQkw7RUF1QlEsYUFBYTtDQUNoQjs7QUF4Qkw7RUEyQlEsY0FBYztDQUNqQjs7QUE1Qkw7RUErQlEsc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQix5QkFBeUI7Q0E4QjVCOztBQS9ETDtFQW1DWSxzQkFBc0I7RUFDdEIsa0JBQWtCO0VBRWxCLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtDQXFCbkI7O0FBOURUO0VBNENnQixvQkNsREk7Q0RtRFA7O0FBN0NiO0VBZ0RnQixvQkFBb0I7RUFDcEIsZ0JBQWdCO0NBUW5COztBQXpEYjtFQW9Eb0Isa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixXQUFXO0VBQ1gsZ0JBQWdCO0NBQ25COztBQXhEakI7RUE0RHlCLFdBQVc7Q0FBSTs7QUE1RHhDO0VBa0VRLGdCQUFnQjtFQUNoQixnQkFBZ0I7Q0FNbkI7O0FBekVMO0VBc0VnQix5QkFBaUI7Q0FDcEI7O0FBdkViO0VBOEVRLGNBQWM7RUFDZCxtQkFBbUI7RUFDbkIsMEJDdkZXO0VEd0ZYLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsYUFQVztFQVFYLGNBQWM7RUFDZCxhQVJXO0NBOENkOztBQTNITDtFQXdGWSxrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGlDQ2pHTztDRGtHVjs7QUEzRlQ7RUE4RlksZUFBZTtDQUNsQjs7QUEvRlQ7RUFrR1ksYUFBYTtFQUNiLGtCQUFrQjtFQUlsQixnQkFBZ0I7Q0FTbkI7O0FBaEhUO0VBcUdnQixjQUFjO0NBQ2pCOztBQXRHYjtFQTBHZ0IsOEJDaEhJO0NEaUhQOztBQTNHYjtFQThHZ0Isb0JDcEhJO0NEcUhQOztBQS9HYjtFQW1IWSxtQkFBbUI7RUFDbkIsWUF2Q087RUF3Q1AsYUFBYTtFQUNiLGFBekNPO0VBMENQLFlBQVk7RUFDWixZQUFZO0NBQ2Y7O0FBTVQ7RUFFUSxnQkFBZ0I7Q0FDbkI7O0FBSEw7RUFPWSxjQUFjO0NBQ2pCOztBQVJUO0VBV1ksc0JBQXNCO0VBQ3RCLGNBQWM7Q0FLckI7O0FBakJMO0VBY2dCLFlBQVk7RUFDWixhQUFhO0NBQ2hCOztBQWhCYjtFQW9CUSxnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsY0FBYztDQUtqQjs7QUE3Qkw7RUEyQlksWUFBWTtDQUNmOztBQTVCVDtFQWdDUSxjQUFjO0NBQ2pCOztBQUdMO0VBQ0UsZUFBZTtFQUNmLGtCQUFrQjtFQUNsQixjQUFjO0VBQ2QsK0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixtQkFBbUI7Q0FDcEI7O0FBRUQsMENBQTBDO0FBQzFDO0VBQ0UsbUJBQW1CO0VBQ25CLFVBQVU7RUFDVixRQUFRO0NBQ1QiLCJmaWxlIjoibGluZS1zbGlkZXIuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcImNvbmZpZ1wiO1xuXG5ib2R5IHtcbiAgZm9udDogMTBweCBzYW5zLXNlcmlmO1xufVxuXG5cbiN0aW1lbGluZSB7XG4gICAgLmF4aXMgcGF0aCB7XG4gICAgICBmaWxsOiBub25lO1xuICAgICAgc3Ryb2tlOiAjMDAwO1xuICAgICAgc3Ryb2tlLXdpZHRoOiAycHg7XG4gICAgICBvcGFjaXR5OiAwLjc7XG4gICAgfVxuICAgIC5heGlzIGxpbmUge1xuICAgICAgZmlsbDogbm9uZTtcbiAgICAgIHN0cm9rZTogJGxpZ2h0Y29sb3I7XG4gICAgICBzaGFwZS1yZW5kZXJpbmc6IGNyaXNwRWRnZXM7XG4gICAgfVxuXG4gICAgLnguYXhpcyBwYXRoIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgLmxpbmUge1xuICAgICAgZmlsbDogbm9uZTtcbiAgICAgIHN0cm9rZS13aWR0aDogMS41cHg7XG4gICAgfVxuXG4gICAgLnJpZ2h0LWJsb2NrIHtcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xuICAgIH1cblxuICAgIC53cmFwcGVyIHtcbiAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICB9XG5cbiAgICB1bCB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAwcHg7XG4gICAgICAgIG1hcmdpbjogMHB4IDEwcHggMHB4IDBweDtcbiAgICAgICAgbGkubGVnZW5kIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4O1xuICAgICAgICAgICAgLy8gYm9yZGVyOiAxcHggc29saWQgJGJhc2Vjb2xvcjtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDBweCA1cHg7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXB4O1xuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAkbGlnaHRjb2xvcjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc3BhbiB7XG4gICAgICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IHRvcDtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDIwcHg7XG5cbiAgICAgICAgICAgICAgICAmLmNsb3NlIHtcbiAgICAgICAgICAgICAgICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgLmNsb3NlIHsgb3BhY2l0eTogMTsgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLm1vcmUtY291bnRyeS1idXR0b24ge1xuICAgICAgICBmb250LXNpemU6IDE1cHg7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgJi5jbGlja2VkIHtcbiAgICAgICAgICAgIGkge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDQ1ZGVnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC5jb3VudHJ5LXBhbmVsIHtcbiAgICAgICAgJHdpZHRoOiAyMDA7XG4gICAgICAgICRwYWRkaW5nOiA1O1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICRiYXNlY29sb3I7XG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICByaWdodDogMHB4O1xuICAgICAgICB3aWR0aDogJHdpZHRoICsgcHg7XG4gICAgICAgIGhlaWdodDogMjAwcHg7XG4gICAgICAgIHBhZGRpbmc6ICRwYWRkaW5nICsgcHg7XG5cbiAgICAgICAgLmNvdW50cnktd3JhcHBlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgIG92ZXJmbG93OiBzY3JvbGw7XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJGJhc2Vjb2xvcjtcbiAgICAgICAgfVxuXG4gICAgICAgICYuc2hvd2VkIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNvdW50cnkge1xuICAgICAgICAgICAgcGFkZGluZzogM3B4O1xuICAgICAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgICAgICAgICAmLmhpZGUge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG5cbiAgICAgICAgICAgICY6bnRoLWNoaWxkKG4rMil7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICRsaWdodGNvbG9yO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAmOmhvdmVyIHtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiAkbGlnaHRjb2xvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlucHV0IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgIGJvdHRvbTogJHBhZGRpbmcgKyBweDtcbiAgICAgICAgICAgIHdpZHRoOiAkd2lkdGggLSAyKiRwYWRkaW5nICsgcHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAkcGFkZGluZyArIHB4O1xuICAgICAgICAgICAgbWFyZ2luOiAwcHg7XG4gICAgICAgICAgICBib3JkZXI6IDBweDtcbiAgICAgICAgfVxuXG4gICAgfVxuXG59XG5cbiN0aW1lbGluZSAjY2hhcnQge1xuICAgIC50aWNrIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cblxuICAgIC54LmF4aXMge1xuICAgICAgICBsaW5lIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmZvY3VzLWxpbmUge1xuICAgICAgICAgICAgc3Ryb2tlLWRhc2hhcnJheTogMiwyO1xuICAgICAgICAgICAgc3Ryb2tlOiBibGFjaztcbiAgICAgICAgICAgICYuY3VycmVudCB7XG4gICAgICAgICAgICAgICAgc3Ryb2tlOiByZWQ7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMC43O1xuICAgICAgICAgICAgfVxuICAgIH1cblxuICAgIC55ZWFyLWJ1bGxldCB7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgc3Ryb2tlOiBncmV5O1xuICAgICAgICBzdHJva2Utd2lkdGg6IDNweDtcbiAgICAgICAgZmlsbDogZ3JleTtcbiAgICAgICAgei1pbmRleDogMTAwMDtcblxuICAgICAgICAmLnNlbGVjdGVkIHtcbiAgICAgICAgICAgIGZpbGw6IHdoaXRlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgI3JlbGF0aXZlLWNoYXJ0IHtcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICB9XG59XG5cbi50aW1lbGluZS10aXAge1xuICBsaW5lLWhlaWdodDogMTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBhZGRpbmc6IDEycHg7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC44KTtcbiAgY29sb3I6ICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbn1cblxuLyogU3R5bGUgbm9ydGh3YXJkIHRvb2x0aXBzIGRpZmZlcmVudGx5ICovXG4udGltZWxpbmUtdGlwLm46YWZ0ZXIge1xuICBtYXJnaW46IC0xcHggMCAwIDA7XG4gIHRvcDogMTAwJTtcbiAgbGVmdDogMDtcbn1cbiIsIiRiYXNlY29sb3I6ICMxMTMwNjM7XG4kbGlnaHRjb2xvcjogI0UyRTlGNTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
